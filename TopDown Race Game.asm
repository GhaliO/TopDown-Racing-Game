######################################################################
# Bitmap display configuration:
# - Unit width in pixels: 	16
# - Unit height in pixels: 	16
# - Display width in pixels: 	512
# - Display height in pixels: 	512
# - Base Address for Display: 	0x10008000 
#
#You can control using a and d keypads on MIMO simulator to move vehicle left or right to avoid object.
#You have 3 lives every time you collide with object on road. 
#You can see your life bar at the top once it runs out, GAME OVER!
#Try to pick up space crystal to refuel!
#You are on a spaceship and you need to avoid the obstacles on the road! 
#GOODLUCK!
######################################################################

#############################################
#first part is for the game speed settings
#game levels it gets harder as time elapses
#game limits - you only get 12 life booster crystals at maz
#screen dimensions
#########################
.eqv	slow_sp 		0
.eqv	normal_sp 		1
.eqv	fast_sp 		2
.eqv	slow_delay 		45 
.eqv	normal_delay 		25 
.eqv	fast_delay 		15 

.eqv	level_one		1
.eqv	level_two		2
.eqv	level_three		2

.eqv	space_pattern_count	 5
.eqv	alien_lives_limit	12

.eqv	map_left_edge		1
.eqv 	map_top_edge 		5
.eqv	map_right_edge		32
.eqv 	map_bottom_edge 	32
.eqv 	screen_width_px		32
.eqv	screen_mem_bytes	4096

#object dimensions:
.eqv	alien_width	5
.eqv	alien_height	7
.eqv	alien_y_axis	20 
.eqv	meteor_width	3
.eqv	meteor_height	5
.eqv	crystal_width	3
.eqv	crystal_height	3

.data	
game_over_msg: .asciiz "Game Over, YOU LOST! Run to try again\n"
	bufferDisplay:		.word 0:screen_mem_bytes
	displayAddress: 	.word 0x10008000
	displayAddressEnd: 	.word 0x10009000

	init_alien_pos:	.word 17, alien_y_axis
	init_alien_speed:	.word 0
	init_alien_level:	.word level_one
	init_alien_crystal:	.word 4
	
	init_meteor1_pos:	.word 5, -meteor_height
	init_meteor2_pos:	.word 21, -meteor_height
	init_crystals_pos:		.word 0, -crystal_height

	alien_pos:		.word 17, 20
	alien_speed:		.word 0
	alien_level:		.word level_one
	alien_score:		.word 0
	alien_crystal:		.word 4

	meteor1_pos:		.word 0, -meteor_height
	meteor2_pos:		.word 0, -meteor_height
	crystals_pos:			.word 0, -crystal_height
	#to check if game over 
	game_over_state: 	.word 0
	space_state: 		.word 0 

.data		
# this section defines visual data using 32-bit color values (0xRRGGBB) for display.
# each data (e.g., alien, meteor) is a block of words drawn to the screen using 'draw_data'. This is how I did it to display on bitmap:
			
	space: .word
		0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
		0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
		0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
		0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
		0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0x000000 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
	0x263238,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xdda0dd,0xdda0dd ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000, 0xba55d3 ,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x263238,
						
alien_data:
    .word 0x000000, 0x800080, 0x800080, 0x800080, 0x000000     
    .word 0x800080, 0xba55d3, 0xba55d3, 0xba55d3, 0x800080     
    .word 0xba55d3, 0xba55d3, 0xffffff, 0xba55d3, 0xba55d3     
    .word 0x800080, 0xba55d3, 0xba55d3, 0xba55d3, 0x800080     
    .word 0x000000, 0x4b0082, 0x800080, 0x4b0082, 0x000000     
	
meteor1_data:  .word
    0x4b4b4b, 0x6e6e6e, 0x6e6e6e, 0x4b4b4b
    0x888888, 0xaaaaaa, 0xaaaaaa, 0x888888
    0xaaaaaa, 0xdddddd, 0xdddddd, 0xaaaaaa
    0x8A0303, 0x8A0303, 0x8A0303, 0x8A0303  

meteor2_data:  .word  
    0x000000, 0x333333, 0x5c5c5c, 0x333333 
    0x444444, 0x777777, 0x999999, 0x777777 
    0x5c5c5c, 0x999999, 0xbbbbbb, 0x999999 
    0x8A0303, 0x8A0303, 0x8A0303, 0x8A0303   
	
crystals_data:  .word 
    0x000000, 0x00ff00 , 0x000000
    0x00ff00 , 0xaaaaaa, 0x00ff00 
    0x000000, 0x00ff00 , 0x000000

.text
.globl main

main: 		
j game_loop
game_over: 
	li $v0, 4
	la $a0, game_over_msg
	syscall

	li $v0, 10
	syscall

	jal render_frame 		

update:	
	jal sleep	
	jal update_display
game_loop:
	lw $t9, 0xffff0000 
	beq $t9, 1, KEY_PRESSED
	j update
	
return: jr $ra

random: # $a0 = max, random number generator using syscall 42
	move $a1, $a0 	
	li $v0, 42 	
	li $a0, 0  	
	syscall
	j return

########################################
#resets memory to default values (including alien_level, alien_crystal). Then, start game
reset_game: 
	lw $t0, init_alien_level
	sw $t0, alien_level
	
	lw $t0, init_alien_crystal
	sw $t0, alien_crystal
	
	jal reset
	j game_loop
reset:	
	sw $ra, -4($sp) #push $ra onto stack
	addi $sp, $sp, -4 #update $ra
	
	lw $t0, init_alien_pos
	sw $t0, alien_pos
	lw $t0, init_alien_pos+4
	sw $t0, alien_pos+4
	
	lw $t0, init_alien_speed
	sw $t0, alien_speed
	
	jal reset_meteor1_pos
	jal reset_meteor2_pos
	jal reset_crystals_pos
	
	lw $ra, 0($sp)   	
 	addi $sp, $sp, 4 	
	j return
	
reset_meteor1_pos:
    la $t0, init_meteor1_pos
    lw $t1, 0($t0)
    sw $t1, meteor1_pos
    lw $t1, 4($t0)
    sw $t1, meteor1_pos+4
    jr $ra

reset_meteor2_pos:
    la $t0, init_meteor2_pos
    lw $t1, 0($t0)
    sw $t1, meteor2_pos
    lw $t1, 4($t0)
    sw $t1, meteor2_pos+4
    jr $ra

reset_crystals_pos:
	lw $t0, init_crystals_pos
	sw $t0, crystals_pos
	lw $t0, init_crystals_pos+4
	sw $t0, crystals_pos+4
	j return

#####################################################################
# delays the game loop based on the current alien speed setting
# uses syscall 32 with the delay value.

sleep:
	li $v0, 32
	lw $a0, alien_speed
	beq $a0, slow_sp, sleep_slow
	beq $a0, normal_sp, sleep_normal
	beq $a0, fast_sp, sleep_fast

sleep_slow:
	li $a0, slow_delay
	j sleep_end
sleep_normal:
	li $a0, normal_delay
	j sleep_end
sleep_fast:
	li $a0, fast_delay
	j sleep_end

sleep_end:
	syscall
	j return

	j return

######################################################################
#update display:
# 1.save return address
# 2. draw space background with animation
# 3. draw alien at current position
# 4. randomly decide whether to spawn meteor1, meteor2, or crystals
# 5. draw meteor1 and check for collision
# 6. draw meteor2 and check for collision
# 7. draw crystals and check for collision
# 8. render everything to screen using double buffering
# 9.restore return address and return from repaint
######################################################################
update_display:
	sw $ra, -4($sp) 	
	addi $sp, $sp, -4	
	jal draw_space 
	
	lw $a0, alien_pos
	lw $a1, alien_pos + 4
	li $a2, alien_width
	li $a3, alien_height
	addi $sp, $sp, -4
	la $t0, alien_data
	sw $t0, 0($sp)
	jal draw_data

	li $a0, 200
	jal random
	li $t3, map_bottom_edge
	subi $t3, $t3, map_top_edge
	blt $a0, 20, generate_left_meteor
	blt $a0, 40, generate_right_meteor
	beq $a0, 198, generate_crystals_powerup
	j draw_obstacles_and_powerups

generate_left_meteor:
	lw $t2, meteor1_pos + 4
	beq $t2, -meteor_height, reset_left_meteor
	bgt $t2, $t3, reset_left_meteor
	j draw_obstacles_and_powerups

reset_left_meteor:
	li $a0, 15
	subi $a0, $a0, meteor_height
	jal random
	sw $a0, meteor1_pos
	li $t2, -meteor_height
	addi $t2, $t2, 1
	sw $t2, meteor1_pos + 4
	j draw_obstacles_and_powerups

generate_right_meteor:
	lw $t2, meteor2_pos + 4
	beq $t2, -meteor_height, reset_right_meteor
	bgt $t2, $t3, reset_right_meteor
	j draw_obstacles_and_powerups

reset_right_meteor:
	li $a0, 15
	subi $a0, $a0, meteor_width
	jal random
	addi $a0, $a0, 16
	sw $a0, meteor2_pos
	li $t2, -meteor_width
	addi $t2, $t2, 1
	sw $t2, meteor2_pos + 4
	j draw_obstacles_and_powerups

generate_crystals_powerup:
	lw $t2, crystals_pos + 4
	beq $t2, -crystal_height, reset_crystals
	bgt $t2, $t3, reset_crystals
	j draw_obstacles_and_powerups

reset_crystals:
	li $a0, map_right_edge
	subi $a0, $a0, map_left_edge
	subi $a0, $a0, crystal_width
	jal random
	sw $a0, crystals_pos
	li $t2, -crystal_height
	addi $t2, $t2, 1
	sw $t2, crystals_pos + 4
	j draw_obstacles_and_powerups
	
draw_obstacles_and_powerups:

draw_meteor1: 
    lw $t2, meteor1_pos + 4
    beq $t2, -meteor_width, draw_meteor1_end
    addi $t2, $t2, 1  
    sw $t2, meteor1_pos + 4

    lw $a0, meteor1_pos
    lw $a1, meteor1_pos + 4
    li $a2, meteor_width
    li $a3, meteor_height
    addi $sp, $sp, -4
    la $t0, meteor1_data
    sw $t0, 0($sp)  
    jal draw_data

    beqz $a0, draw_meteor1_end  # to check for cllision 
    jal collision_obstacle
draw_meteor1_end:

draw_meteor2:  
    lw $t2, meteor2_pos + 4
    beq $t2, -meteor_height, draw_meteor2_end
    addi $t2, $t2, 1  
    sw $t2, meteor2_pos + 4

    lw $a0, meteor2_pos
    lw $a1, meteor2_pos + 4
    li $a2, meteor_width
    li $a3, meteor_height
    addi $sp, $sp, -4
    la $t0, meteor2_data
    sw $t0, 0($sp) 
    jal draw_data

    beqz $a0, draw_meteor2_end  
    jal collision_obstacle
draw_meteor2_end:

	draw_crystals:	
		lw $t2, crystals_pos + 4
		beq $t2, -crystal_height, draw_crystals_end
		addi $t2, $t2, 1 
		sw $t2, crystals_pos + 4
		lw $a0, crystals_pos
		lw $a1, crystals_pos + 4
		li $a2, crystal_width
		li $a3, crystal_height
		addi $sp, $sp, -4
		la $t0, crystals_data
		sw $t0, 0($sp) 
		jal draw_data

		beqz $a0, draw_crystals_end
		jal collision_crystals
	draw_crystals_end:

	jal draw_crystal 	
	jal render_frame 	
	
	lw $ra, 0($sp)   	
 	addi $sp, $sp, 4 	
	j return
#for double buffering:
render_frame:
	lw $t0, displayAddress 		
	lw $t1, displayAddressEnd 
	la $t2, bufferDisplay
render_frame_loop:
	bgt $t0, $t1, return 	
	lw $t3, 0($t2)	 	
	sw $t3, 0($t0) 	 	
	addi $t0, $t0, 4 	
	addi $t2, $t2, 4 	
	j render_frame_loop

draw_full_display: 
	la $t0, bufferDisplay 			
	la $t1, bufferDisplay+screen_mem_bytes 
	move $t2, $a0				
	add $t2, $t2, $a1			
draw_full_display_loop:
	bgt $t0, $t1, return 	
	lw $t3, 0($t2)	 	
	sw $t3, 0($t0) 	 	
	addi $t0, $t0, 4 	
	addi $t2, $t2, 4 	
	j draw_full_display_loop

#draw space
draw_space:
#dashed line
lw   $t0, space_state
sll  $t0, $t0, 7
li   $t1, 640
sub  $t0, $t1, $t0
sw   $ra, -4($sp)
sw   $t0, -8($sp)
addi $sp, $sp, -8
jal  update_space_state
lw   $t3, 0($sp)
lw   $ra, 4($sp)
addi $sp, $sp, 8
la   $a0, space
move $a1, $t3
j    draw_full_display

draw_crystal:
    addi $sp, $sp, -4
    sw   $ra, 0($sp)
    la   $t0, bufferDisplay
    lw   $t1, alien_crystal
    li   $t2, 0x8e24aa
    li   $t4, 0

draw_crystal_loop:
    blez $t1, draw_crystal_done
    bge  $t4, $t3, draw_crystal_done
    sw   $t2, 0($t0)
    sw   $t2, 4($t0)
    li   $t5, 128
    add  $t6, $t0, $t5
    sw   $t2, 0($t6)
    sw   $t2, 4($t6)
    addi $t0, $t0, 8
    addi $t4, $t4, 2
    subi $t1, $t1, 1
    j    draw_crystal_loop

draw_crystal_done:
    lw   $ra, 0($sp)
    addi $sp, $sp, 4
    jr   $ra

draw_data:
    lw   $s0, alien_pos
    lw   $s1, alien_pos + 4
    addi $s2, $s0, alien_width
    subi $s2, $s2, 1
    addi $s3, $s1, alien_height
    subi $s3, $s3, 1
    add  $s4, $a0, $a2
    subi $s4, $s4, 1
    add  $s5, $a1, $a3
    subi $s5, $s5, 1
    sle  $s6, $s0, $s4
    sge  $s7, $s2, $a0
    sle  $t8, $s1, $s5
    sge  $t9, $s3, $a1
    add  $s6, $s6, $s7
    add  $s6, $s6, $t8
    add  $s6, $s6, $t9
    move $s0, $a0
    move $s1, $a1
    move $s2, $a2
    move $s3, $a3
    li   $a0, 0
    bne  $s6, 4, no_data_collision
    li   $a0, 1

no_data_collision:
    addi $s1, $s1, map_top_edge
    sll  $s1, $s1, 5
    add  $s1, $s1, $s0
    addi $s1, $s1, map_left_edge
    sll  $s1, $s1, 2
    la   $t0, bufferDisplay
    add  $t0, $t0, $s1
    la   $t1, bufferDisplay+screen_mem_bytes
    li   $t2, screen_width_px
    addi $t2, $t2, 1
    sub  $t2, $t2, $s2
    sll  $t2, $t2, 2
    lw   $t3, 0($sp)
    addi $sp, $sp, 4
    move $t4, $zero

draw_data_loop:
    mult $s2, $s3
    mflo $t6
    beq  $t4, $t6, return
    bgt  $t0, $t1, return
    lw   $t5, 0($t3)
    addi $t3, $t3, 4
    addi $t4, $t4, 1
    beqz $t5, draw_data_loop_end
    sw   $t5, 0($t0)

draw_data_loop_end:
    div  $t4, $s2
    mfhi $t6
    beqz $t6, update_next_line
    addi $t0, $t0, 4
    j    draw_data_loop

update_next_line:
    add  $t0, $t0, $t2
    j    draw_data_loop

update_alien_pos:
    move $t0, $a0
    bltz $t0, collision_obstacle
    li   $t1, map_right_edge
    subi $t1, $t1, map_left_edge
    subi $t1, $t1, alien_width
    bge  $t0, $t1, collision_obstacle
    sw   $t0, alien_pos
    j    return

increase_speed:
    lw   $t0, alien_speed
    bge  $t0, fast_sp, return
    addi $t0, $t0, 1
    sw   $t0, alien_speed
    j    return

decrease_speed:
    lw   $t0, alien_speed
    ble  $t0, slow_sp, return
    addi $t0, $t0, -1
    sw   $t0, alien_speed
    j    return

update_space_state:
    lw   $t0, space_state
    blt  $t0, space_pattern_count, increment_space_state
    li   $t0, -1

increment_space_state:
    addi $t0, $t0, 1
    sw   $t0, space_state
    j    return

collision_obstacle:
    sw   $ra, -4($sp)
    addi $sp, $sp, -4
    jal  reset
    lw   $ra, 0($sp)
    addi $sp, $sp, 4
    li   $a0, -1
    j    update_crystal

collision_crystals:
    sw   $ra, -4($sp)
    addi $sp, $sp, -4
    jal  reset_crystals_pos
    lw   $ra, 0($sp)
    addi $sp, $sp, 4
    li   $a0, 1
    j    update_crystal

next_level:
    li   $v0, 32
    li   $a0, 2500
    syscall
    lw   $t0, alien_level
    bge  $t0, level_three, game_over
    addi $t0, $t0, 1
    sw   $t0, alien_level
    sw   $ra, -4($sp)
    addi $sp, $sp, -4
    jal  reset
    lw   $ra, 0($sp)
    addi $sp, $sp, 4
    j    return

update_crystal:
    lw   $t0, alien_crystal
    add  $t0, $t0, $a0
    bgt  $t0, alien_lives_limit, return
    blez $t0, game_over
    sw   $t0, alien_crystal
    j    return
#for keypads a and d
KEY_PRESSED:
    lw   $t9, 0xffff0004
    beq  $t9, 0x61, keycode_a
    beq  $t9, 0x41, keycode_a
    beq  $t9, 0x64, keycode_d
    beq  $t9, 0x44, keycode_d
    j    update

keycode_a:
    lw   $a0, alien_pos
    addi $a0, $a0, -1
    jal  update_alien_pos
    j    update

keycode_d:
    lw   $a0, alien_pos
    addi $a0, $a0, 1
    jal  update_alien_pos
    j    update

Exit:
    li   $v0, 10
    syscall
	
	
